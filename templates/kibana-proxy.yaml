---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: kibana-proxy
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: kibana-proxy
    labels:
      app: kibana-proxy
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kibana-proxy
    template:
      metadata:
        labels:
          app: kibana-proxy
      spec:
        containers:
        - name: kibana-proxy
          image: ghcr.io/awslabs/aws-sigv4-proxy
          args:
            - --name
            - kibana-elasticsearch
            - --region
            - us-east-1
            - --endpoint
            - https://vpc-kibana-elasticsearch-2v2ydb43phxfw2byfkv3kqem64.us-east-1.es.amazonaws.com/_plugin/kibana/
          env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: proxy
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: proxy
                key: AWS_SECRET_ACCESS_KEY
          ports:
          - containerPort: 8080
  
- apiVersion: v1
  kind: Service
  metadata:
    name: kibana-proxy
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: kibana-proxy-tls
  spec:
    ports:
    - name: https
      port: 3000
      protocol: TCP
      targetPort: 8080
    selector:
      run: kibana-proxy
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      cert-manager.io/issuer-kind: ${{CERT_MANAGER_ISSUER_KIND}}
      cert-manager.io/issuer-name: ${{CERT_MANAGER_ISSUER_NAME}}
      haproxy.router.openshift.io/timeout: 3600s
    name: kibana-proxy
  spec:
    host: ${HOST}
    port:
      targetPort: https
    to:
      kind: Service
      name: kibana-proxy
      weight: 100
    tls:
      termination: reencrypt
      insecureEdgeTerminationPolicy: Redirect
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: kibana-proxy
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"kibana-proxy"}}'
  imagePullSecrets:
  - name: ${IMAGE_PULL_SECRET_NAME}
parameters:
- name: IMAGE_TAG
  value: dummy # needed because saasherder will fail if this parameter doesn't exist.
- name: REPLICAS
  value: "1"
- name: WORKER_CONNECTIONS
  value: "1024"
- name: SERVER_NAMES_HASH_BUCKET_SIZE
  value: "128"
- name: RESOLVER_VALID
  value: "30s"
- name: IMAGE_PULL_SECRET_NAME
  value: quay-cloudservices-pull
- name: CERT_MANAGER_ISSUER_KIND
  value: ClusterIssuer
- name: CERT_MANAGER_ISSUER_NAME
  value: letsencrypt-prod-http
- name: HOST
  required: true
