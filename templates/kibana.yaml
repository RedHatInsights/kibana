apiVersion: v1
kind: Template
metadata:
  name: kibana
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: kibana
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"kibana"}}'
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: kibana
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: kibana
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: kibana
      spec:
        serviceAccountName: kibana
        initContainers:
        - name: es-init-template
          image: quay.io/app-sre/nginx:alpine
          env:
          - name: ELASTICSEARCH_HOSTS
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: kibana-elasticsearch
          command:
            - "sh"
          args:
            - "-c"
            - |
              set -ex
              curl -XPUT "$ELASTICSEARCH_HOSTS/_template/template_1" -H 'Content-Type: application/json' -d'{"template": "cwl-*","settings": {"index.mapping.total_fields.limit": 2000},"mappings": {"dynamic_templates": [{"host_tags": {"match_mapping_type": "string","path_match": "*host.tags.*","mapping": {"index": false}}}]}}'
        containers:
        - env:
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: "localhost"
          - name: SERVER_MAXPAYLOADBYTES
            value: "8388608"
          - name: ELASTICSEARCH_HOSTS
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: kibana-elasticsearch
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: kibana
          resources:
            limits:
              cpu: 750m
              memory: 1900Mi
            requests:
              cpu: 200m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - name: kibana-proxy
          image: ${OAUTH_IMAGE}:${OAUTH_IMAGE_TAG}
          imagePullPolicy: Always
          args:
          - --https-address=:8443
          - --provider=openshift
          - --openshift-service-account=kibana
          - --upstream=http://localhost:5601
          - --tls-cert=/etc/tls/private/tls.crt
          - --tls-key=/etc/tls/private/tls.key
          - --cookie-secret-file=/etc/proxy/secrets/session_secret
          - --pass-basic-auth=false
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 50Mi
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              path: /oauth/healthz
              port: https
              scheme: HTTPS
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/proxy/secrets
            name: proxy-cookie
          - mountPath: /etc/tls/private
            name: proxy-tls
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: proxy-cookie
          secret:
            defaultMode: 420
            secretName: kibana-cookie
        - name: proxy-tls
          secret:
            defaultMode: 420
            secretName: kibana-tls
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kibana
    name: kibana
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: kibana-tls
  spec:
    ports:
    - port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: kibana
    name: kibana
  spec:
    host: ${KIBANA_HOST}
    port:
      targetPort: 8443
    to:
      kind: Service
      name: kibana
      weight: 100
    tls:
      termination: Reencrypt
parameters:
- description: Image namespace
  name: IMAGE
  value: quay.io/cloudservices/kibana-oss
- description: Image tag
  name: IMAGE_TAG
  value: "7.4.2"
  required: true
- name: OAUTH_IMAGE
  value: quay.io/openshift/origin-oauth-proxy
- name: OAUTH_IMAGE_TAG
  value: "4.4.0"
- name: KIBANA_HOST
  value: kibana.apps.crc-stg-01.o4v9.p1.openshiftapps.com
